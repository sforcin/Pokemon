Storyline: 
1. Game starts. 
  Display main menu (Reference Screen layout)
  Action: User selects an option. Start new game leads to Welcome screen

2. Welcome screen: 
  Display: “Hello, welcome to the world of Pokemon [FIXME if needed]! Before you begin your adventure, tell us your name”
  Input: User types their name
  Action: store the name is memory for future reference

3. Character selection
  Display the choose your starter pokemon user screen
  Input: User selects a Pokemon
  Action: Instantiate the chosen Pokemon object from classes (Charmander, Squirtle, Bulbasaur) according to UML

4. Initial Gameplay
  Using Display class, show the user’s character in the starting location.
  Action: Move in a valid direction on the grid towards some objective.
              (Player is immune from random battles until they get their first pokemon). //so until they are a trainer, no battles (make battles exclusive for trainer class)
              (Otherwise, each movement on the grid will have a change of triggering a small battle).
  Each player will be able to do one action (e.g. move once on the grid) and then control is switched to another player(singleplayer...?),
      unless the current player triggers a battle or other longer interaction of some kind.
  Mini battles will give the player some kind of perk when won, otherwise the player will lose the best of their 3 pokemon that was used in the battle.
      The player will also gain xp, which could make them level up.
        Action: increaase xp accordingly. set up functions for that
  When certain levels are reached, the player will unlock more features and be able to do more stuff.
        Action: set up a boolean to go to next level if a certain xp is reached.
  
  Action: Begin simple tasks (capture first pokemon)

5. Pause Menu
  Display pause menu (Settings from user diagram)
  Input: user interact with menu. [update user diagram to show what happens when you make each decision]
    From menu, we can delete game(clean up memory and delete it)
    Or we could save and exit (store it in memory)
    Edit / add characters will change the player class
    Pause game: game will be paused for up to [maybe?] 5 minutes before it dies (and saves)
    Menu will be displayed for a certain amount of time [maybe 5 min]

5. End game and Transition States
  Different cases will cause different endings. Depending on achievements
  Choose whether or not to save game automatically, or only when prompted


//possible 
Character Creation (based on uml)
Output: “Choose your character type”
Player will be a trainer (only option connected to player)
Action:  Use methods defined in Trainer class


OPTION A: (start new game) 
Game starts. Maybe place a “press any key to start”, or use some sort of input from the user.
Output first menu: “Hello, welcome Pokémon explorer. What is your name?”, 
Get input for name 
Welcome the user, then ask the user to pick a pokemon character to start with. Then we can personalize the intro with the chosen character.
Output intro story: 
  "Congratulations, [User's Name]! You've chosen [Pokémon Name]." "Your journey begins now. Let's dive into the world of Pokémon!"
Intro Story
"You wake up in your cozy little town of Pallet Town. It's a bright and sunny day, perfect for starting your adventure."
"Professor Oak, the town's Pokémon expert, has invited you to his lab to give you your first Pokémon."
"You hurry over to the lab, excited and nervous about what lies ahead."
Get user input to continue
"With your new Pokémon by your side, you step out of the lab, ready to explore the world and become a Pokémon Master."
"Your first task is to travel to Viridian City and meet with your first rival battle!"
Get user input to continue


